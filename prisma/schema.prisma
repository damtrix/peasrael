// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(cuid())
  email     String    @unique
  lastName  String?
  firstName String?
  phone     String?
  username  String   @unique
  password  String
  costPrice CostPrice[]
  sellingPrice SellingPrice[]
  quantity Quantity[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userType  UserType @default(USER)
  summary   Summary[]
  sales Sales[]
}

model Incomes {
  id        String  @id @default(cuid())
  amount    Int
  description    String
  summary      Summary     @relation(fields: [summaryId], references: [id])
  summaryId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Expenses {
  id        String  @id @default(cuid())
  amount    Int
  description    String
  summary      Summary     @relation(fields: [summaryId], references: [id])
  summaryId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Summary {
  id  String @id @default(cuid())
  incomes  Incomes[]
  expenses Expenses[]
  incomeTotal Int
  expenseTotal Int
  user User @relation(fields: [userId], references: [id])
  userId String
}

model Sales {
  id        String  @id @default(cuid())
  customerName    String?
  network   NetworkType
  profit    Int
  outPrice     Int?
  receivedTo String?
  type      SalesType
  dataType  DataType
  quantity Quantity @relation(fields: [quantityId], references: [id])
  quantityId String
  user      User     @relation(fields:[userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CostPrice {
  id        String  @id @default(cuid())
  network   NetworkType
  amount    Int
  type      SalesType
  dataType  DataType?
  quantity Quantity @relation(fields: [quantityId], references: [id])
  quantityId String
  user User @relation(fields: [userId], references: [id])
  userId String
  @@unique([network, amount, type, dataType, quantityId, userId])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SellingPrice {
  id        String  @id @default(cuid())
  network   NetworkType
  amount    Int
  type      SalesType
  dataType  DataType?
  quantity Quantity @relation(fields: [quantityId], references: [id])
  quantityId String
  user User @relation(fields: [userId], references: [id])
  userId String
  @@unique([network, amount, type, dataType, quantityId, userId])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Quantity {
  id        String  @id @default(cuid())
  value    String
  user User @relation(fields: [userId], references: [id])
  userId String
  @@unique([value, userId])
  sellingPrice SellingPrice[]
  costPrice CostPrice[]
  sales Sales[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserType {
  USER
  ADMIN
}

enum NetworkType {
  MTN
  GLO
  AIRTEL
  SMILE
  MOBILE
  NULL
}

enum SalesType {
  airtime
  data 
  electricity
}

enum DataType {
  SME
  COOPERATE
  GIFTING
  NULL
}


